# https://docs.docker.com/compose/compose-file/
# build rm up/down
services:
  frontend:
    image: practice/nextjs
    container_name: nextjs
    ports:
      - "3000:3000"
    networks:
      - front-tier
      - back-tier
      - vscode

  backend:
    image: practice/nestjs
    container_name: nestjs
    # restart: always
    environment:
      NODE_ENV: production
      LOG_STORAGE_PATH: "./logs"
      LOG_STORAGE_DAYS: 1
      LOG_FILE_LEVEL: "verbose"
      LOG_CONSOLE_LEVEL: "info"
      TYPEORM_TYPE: "mysql"
      TYPEORM_DATABASE: "test"
      TYPEORM_ENABLE_SYNC: "false"
      TYPEORM_HOST: "practice.mysql"
      TYPEORM_PORT: 3306
      TYPEORM_USERNAME: "root"
      TYPEORM_PASSWORD: "password"
      SESSION_TYPE: "redis"
      REDIS_HOST: "practice.redis"
      REDIS_PORT: 6379
    ports:
      - "4000:4000"
    networks:
      - back-tier
      - vscode
    volumes:
      - type: volume
        source: nestjs-data
        target: /var/lib/mysql
      # - type: bind
      #   source: ./nestjs/logs
      #   target: /workspaces/practice/logs
    depends_on:
      - mysql
      - redis
  mysql:
    image: mysql
    container_name: practice.mysql
    environment:
      MYSQL_ROOT_PASSWORD: "password"
    ports:
      - "3306:3306"
    networks:
      - back-tier
      - vscode
    volumes:
      - type: volume
        source: mysql-data
        target: /var/lib/mysql
  redis:
    image: redis
    container_name: practice.redis
    environment:
      MYSQL_ROOT_PASSWORD: "password"
    ports:
      - "6379:6379"
    networks:
      - back-tier
      - vscode
    volumes:
      - type: volume
        source: redis-data
        target: /data

volumes:
  nestjs-data:
  mysql-data:
  redis-data:
networks:
  front-tier: {}
  back-tier: {}
  vscode:
    external: true
